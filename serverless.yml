service: event-ingestion
frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-express
  - serverless-webpack
  - serverless-pseudo-parameters
  # - serverless-domain-manager

package:
  individually: true
  include:
    - src/**/*.js
    - src/**/*.map.js
  exclude:
    - src/**/*.test.js
    - src/**/*.spec.js
    - node_modules/aws-sdk/**
    - coverage/**
    
custom:
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}

  apiKeys:
    - ${self:service}-${self:provider.stage}-apikey

  environment:
    DEBUG: 'api*'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "kinesis:Describe*"
        - "kinesis:Get*"
        - "kinesis:List*"
        - "kinesis:PutRecord*"
        - "kinesis:SubscribeToShard"
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - "dynamodb:*"
      Resource:
        - !Sub "arn:*:dynamodb:*:#{AWS::AccountId}:table/event-ingestion-events"
    - Effect: Allow
      Action:
        - "sqs:GetQueueUrl"
        - "sqs:SendMessage"
      Resource:
        - !Sub "arn:*:sqs:*:#{AWS::AccountId}:event-ingestion-*"

functions:
  api:
    handler: src/lambda.handler
    name: v1-${self:service}-${self:provider.stage}
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
          private: true

  default-stream-consumer:
    handler: src/consumers/default.compute
    events:
      - stream:
          arn: ${cf:${self:service}-resources-${self:provider.stage}.DefaultStreamArn}
          batchSize: 1
          maximumRecordAgeInSeconds: 120
          startingPosition: LATEST
          maximumRetryAttempts: 3
          enabled: true
          destinations:
            onFailure: ${cf:${self:service}-resources-${self:provider.stage}.MaxRetryLambdaQueueArn}

  sqs-consumer:
    handler: src/consumers/queue.compute
    events:
      - sqs:
          arn: ${cf:${self:service}-resources-${self:provider.stage}.DDBWriteQueueArn}
          batchSize: 10